<?xml version="1.0"?>
<launch>

  <!-- Map server -->
  <arg name="map_file" default="$(find udacity_bot)/maps/jackal_race.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Localization-->
  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    <remap from="scan" to="udacity_bot/laser/scan"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="odom_model_type" value="diff-corrected"/>
    <param name="base_frame_id" value="robot_footprint"/>
    <param name="global_frame_id" value="map"/>

    <!--delay or latency allowed between transforms-->
    <param name="transform_tolerance" value="0.2"/>

    <!-- tuned based on your system specifications-->
    <!--A larger range, with a high maximum might be too computationally extensive for a low-end system-->
    <param name="min_particles" value="20"/>
    <param name="max_particles" value="80"/>

    <!--For the project, you should set the position to [0, 0]-->
    <param name="initial_pose_x" value="0.0"/>
		<param name="initial_pose_y" value="0.0"/>
    <param name="initial_pose_a" value="0.0"/>

    <!--Upon receiving a laser scan, it checks the values for update_min_a and update_min_d and compares to how far the robot has moved-->
    <!--Decides whether or not to perform a filter update or to discard the scan data-->
    <!--Discarding data could result in poorer localization results-->
    <!--and too many frequent filter updates for a fast moving robot could also cause computational problems-->
    <param name="update_min_d" value="0.01"/>
    <param name="update_min_a" value="0.01"/>
    
    <!--The likelihood_field model is usually more computationally efficient and reliable-->
    <!--for an environment such as the one you are working with.   -->
    <param name="laser_model_type" value="likelihood_field"/>
    <param name="laser_min_range" value="0.4"/>
       <!--laser_max_beams-->
       <param name="laser_z_hit"  value="0.8"/>
       <param name="lazer_z_rand" value="0.2" />

    <!--Since you are working with a differential drive mobile robot, itâ€™s best to use the diff-corrected type-->
    <param name="odom_model_type" value="diff-corrected"/>
        <param name="odom_alpha1" value="0.02"/>
        <param name="odom_alpha2" value="0.02"/>
        <param name="odom_alpha3" value="0.02"/>
        <param name="odom_alpha4" value="0.02"/>
    
  </node>

<!-- Move base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find udacity_bot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find udacity_bot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find udacity_bot)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find udacity_bot)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find udacity_bot)/config/base_local_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="cmd_vel"/>
    <remap from="odom" to="odom"/>
    <remap from="scan" to="udacity_bot/laser/scan"/>

    <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>

  </node>


</launch>

